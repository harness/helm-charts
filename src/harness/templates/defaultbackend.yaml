{{- if and .Values.global.ingress.enabled .Values.global.ingress.defaultbackend.create }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: default-backend
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: default-backend
  template:
    metadata:
      labels:
        app: default-backend
    spec:
      serviceAccountName: harness-serviceaccount
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        image: {{ include "common.images.image" (dict "imageRoot" .Values.global.ingress.defaultbackend.image "global" .Values.global) }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          runAsUser: 65534
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: default-backend
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: default-backend
  type: ClusterIP
{{- end }}
