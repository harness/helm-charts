---
apiVersion: troubleshoot.sh/v1beta2
kind: SupportBundle
metadata:
  name: supportbundle
spec:
  collectors:
    - clusterResources:
        namespaces: []


    - exec:
        name: logs/gitops
        selector:
          - app.kubernetes.io/name=gitops
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: gitops
        includeAllData: true


    - exec:
        name: logs/access-control
        selector:
          - app.kubernetes.io/name=access-control
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: access-control
        includeAllData: true


    - exec:
        name: logs/change-data-capture
        selector:
          - app.kubernetes.io/name=change-data-capture
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: change-data-capture
        includeAllData: true


    - exec:
        name: logs/debezium-service
        selector:
          - app.kubernetes.io/name=debezium-service
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: debezium-service
        includeAllData: true


    - exec:
        name: logs/gateway
        selector:
          - app.kubernetes.io/name=gateway
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: gateway
        includeAllData: true


    - exec:
        name: logs/harness-manager
        selector:
          - app.kubernetes.io/name=harness-manager
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: harness-manager-config
        includeAllData: true


    - exec:
        name: logs/log-service
        selector:
          - app.kubernetes.io/name=log-service
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: log-service
        includeAllData: true


    - exec:
        name: logs/migrator
        selector:
          - app.kubernetes.io/name=migrator
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: migrator
        includeAllData: true


    - exec:
        name: logs/ng-custom-dashboards
        selector:
          - app.kubernetes.io/name=ng-custom-dashboards
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: ng-custom-dashboards
        includeAllData: true


    - exec:
        name: logs/ng-dashboard-aggregator
        selector:
          - app.kubernetes.io/name=ng-dashboard-aggregator
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: ng-dashboard-aggregator
        includeAllData: true


    - exec:
        name: logs/ng-manager
        selector:
          - app.kubernetes.io/name=ng-manager
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: ng-manager
        includeAllData: true


    - exec:
        name: logs/pipeline-service
        selector:
          - app.kubernetes.io/name=pipeline-service
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: pipeline-service
        includeAllData: true


    - exec:
        name: logs/platform-service
        selector:
          - app.kubernetes.io/name=platform-service
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: platform-service
        includeAllData: true


    - exec:
        name: logs/policy-mgmt
        selector:
          - app.kubernetes.io/name=policy-mgmt
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: policy-mgmt
        includeAllData: true


    - exec:
        name: logs/scm
        selector:
          - app.kubernetes.io/name=scm
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: scm
        includeAllData: true


    - exec:
        name: logs/service-discovery-manager
        selector:
          - app.kubernetes.io/name=service-discovery-manager
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: service-discovery-manager
        includeAllData: true


    - exec:
        name: logs/template-service
        selector:
          - app.kubernetes.io/name=template-service
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        command:
          - "/bin/bash"
          - "-c"
          - |
            NUM_FILES=$0
            FILE_PATH="$1"
            START_TIME=$2
            END_TIME=$3

            all_files=( $FILE_PATH )
            if [ ${#all_files[@]} -eq 0 ]; then
              all_files=($(ls /opt/harness/logs/pod*.log))
            fi

            if [ -z "$START_TIME" ]; then
                files=($(ls $FILE_PATH -tr | tail -n $NUM_FILES))
            else
                for filename in "${all_files[@]}"; do
                  file_time=$(stat -c "%Y" "$filename")
                  # Check if START_TIME is provided and filter files accordingly
                  if [ -n "$START_TIME" ] && [ "$file_time" -lt "$START_TIME" ]; then
                      continue
                  fi
                  # Check if END_TIME is provided and filter files accordingly
                  if [ -n "$END_TIME" ] && [ "$file_time" -gt "$END_TIME" ]; then
                      continue
                  fi
                  # Add file to the list
                  files+=("$filename")
              done
            fi
            for file in "${files[@]}"; do
              echo "====================> File: $file &lt;===================="
              cat $file
            done
        args: []
        timeout: 300s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: template-service
        includeAllData: true


    - logs:
        name: logs/harness-timescaledb
        selector:
          - app.kubernetes.io/name=harness-timescaledb
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        timeout: 120s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: harness-timescaledb
        includeAllData: true


    - logs:
        name: logs/minio
        selector:
          - app.kubernetes.io/name=minio
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        timeout: 120s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: minio
        includeAllData: true


    - logs:
        name: logs/mongodb
        selector:
          - app.kubernetes.io/name=mongodb
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        timeout: 120s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: mongodb
        includeAllData: true


    - logs:
        name: logs/postgresql
        selector:
          - app.kubernetes.io/name=postgresql
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        timeout: 120s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: postgresql
        includeAllData: true


    - logs:
        name: logs/redis
        selector:
          - app.kubernetes.io/name=redis
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        timeout: 120s

    - configMap:
        namespace: YOUR-RELEASE-NAMESPACE-HERE
        name: redis
        includeAllData: true

